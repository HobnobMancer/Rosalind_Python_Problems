# Given two strings s and t of equal length, the Hamming distance between s and t, denoted dH(s,t), is the number of corresponding symbols that differ in s and t
# . See Figure 2.
# Given: Two DNA strings s and t of equal length (not exceeding 1 kbp).
# Return: The Hamming distance dH(s,t)

# Define strings 's' and 't'
stringS = 'CAGTTCTGCGGACTGGTTAATAGCGCGCATGCTGACCGAAGTTTGCGTACTAGGGACCTCAGTTAGATTACGACCCTCCTACACTTATGTAGGAGCGTCGCAACTGACTTGCAACGACAGAGAAGTCAGGGGTCATGGCTAGGTGATCCTGATGTATCTGATAACATCATCGGAATGATAACACCTCTGAAATTTCCGAGTGGCAAAACGCCGTTGCAAGACCTAAGAAGCTTACCAATTGATGTATGTGCATGATGCACGCTAATATCTATCCTGCGAGACGCTGATCGTTCTAGCCAGTCAGAATACTATGTTTAAGTATTGTGGTTAATTACTCGAATCTGCGTTCAAAACAGGTTAGGCCTTAGGTCTCACGCCGATAGTGGTACCTTCCCACTTTGGTCGACTTGGCGGTTATCCGCCGGCCGACAGCATTGTAATACTGTAATTGATCTGACGGGGACGTCATGACAGATCGAGACCCGAAGTCTTGGAACGATCACGTATACCAATTTCACAGGACCGCGCCTAGTTAGCCGTGAAGGAAATCAACGTATCAGGTCTTACGTAATGACATATACAATCTTCGCTGTAAAGCATTGCAAATGTTAGAGGGCACACGAAAGGGAACTTGATTACGGCCATCTACCGTTGCATAGCTTAGGGGACTGGGGTCTGGGGAGAGGTTACGTATGTTGTTGAGTTTGTTCGAAGAGGGTATACCAAGATAGCACGTCTCGAAGAGTCCGGTTGAGCCCCCAATCCTAGAACGATTGGTTGGAAACGTTTAGACCCTCTATTTCTGTCTGGGAAGTTGGCGAATAGTGAATACGCGAAAGCAACACGAGTCGTTACGTCACAACAAGTACCGCAGACAGGCGTTGAGTTCGAACAGTGGCTGCTTGTATATAGTAACGACCGCAGCCCGGCTTGAGTACGCTCCCAACATGCTGGAGCGTGCATGCCCTCTGCGTT'
stringT = 'TGGTAATTTGTAGTGTTCAACGTAGTCCCTGCAGCCCGATGAAAGCGTCCATGAGGAGTGACTGCGGTGAGGAGCCTGCCACATGGAATCAGTAGAGTCTGATATGATTTTCATACACAAGTAACAGGGTGTCCGGGTCCAGGCGCTGCCTTTAAAGCAGATCATATCACGGGAGAGAAGAGAAGTATACACATTCTAAGTCATTATGGTGTATAACACTCCTTAACAGCCTATTTAGTTCCCCGATTTCTGAATATCGTGGTAGAATTCTTCCTGCGACACACGGAGTGCTCAAGGTTGTGAACACTATATTTTAGGGCGCAGTCAGTCTTTCGTTGAGGCTCCAACTAAGAAAAGCAACGTCGTAGAAATCAAAGGGCTAAAGGTACCAACCTTCTTAACGCGGCTTTGAGACGAGCCGGGCACCGAAGGTAGAGTGGTCCTACAAGATACTATCCGCCCTCTTGTACGGCGCAAAAGAGCCGGACTCATTGGAAGTTAACGGCTACGAGGTTCAATACACTCCGCCCAGTAAGCCGTGGAGAAAAAGTGGGGAACCGGACACGCCGTATCAAATATACAATCGTCCCATCCCGATAATCTGAAGTCTTGAGGGAGCACGAAGCTATAATTGTTTATTGCTCAAGCGCGATAGTCGGCTCACCGTTGTTTCTATTGGGGAGAGGTGGCGTATTCTGCACATAATTCTCGTAGGATGTTGTCCGCGATGCCCTACCTCCGCTCGTTTGAACCCAGCTCGAAACATCGTGCGAATGGTTGGACACGTTTCGACCATCAATTGGTGACATTGCCGCACATGCATGCTGTATCCGCGAAAAGGCCACATGCGTAATGGTTCCACAAACGCTCGGGCGATTGGGTAGCGTGCGTGAATTGCGAAGTGTTCTCACCCAGAGTAAGCTGCACACCGGATGCAGTACCTTTTCGTGCTGCAGCGTTAATGCCGCCGGACTA'

# Convert strings 's' and 't' to lists, make compatiable with for loop
listS = list(stringS)
listT = list(stringT)

# Compare nucleotide by nucleotide the two sequeunces, columinating all mistmathced bases in an array
indexNumber = 0
mismatchedNucleotides = []
for nucleotide in listT:
    if nucleotide is not listS[indexNumber]:
        mismatchedNucleotides.append(nucleotide)
    indexNumber = indexNumber + 1

# Print the Hamming distance of strings 's' and 't', the number of mismatch bases
print("The Hamming distance of strings 's' and 't' is", len(mismatchedNucleotides))