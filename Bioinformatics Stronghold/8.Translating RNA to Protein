# The 20 commonly occurring amino acids are abbreviated by using 20 letters from the English alphabet (all letters except for B, J, O, U, X, and Z).
# Protein strings are constructed from these 20 symbols.
# Henceforth, the term genetic string will incorporate protein strings along with DNA strings and RNA strings.

# The RNA codon table dictates the details regarding the encoding of specific codons into the amino acid alphabet.

# Given: An RNA string s corresponding to a strand of mRNA (of length at most 10 kbp).
# Return: The protein string encoded by s.

from textwrap import wrap

# Create Amino acid to mRNA dictionary
# slow method, probably a more automated method exists.
aminoAcidDICTIONARY = {
    'A': ['GCU','GCC','GCA','GCG'],
    'C': ['UGU','UGC'],
    'D': ['GAU','GAC'],
    'E': ['GAA','GAG'],
    'F': ['UUU','UUC'],
    'G': ['GGU','GGC','GGA','GGG'],
    'H': ['CAU','CAC'],
    'I': ['AUU','AUC'],
    'K': ['AAA','AAG'],
    'L': ['CUU','CUC','CUA','CUG','UUA','UUG'],
    'M': ['AUG'],
    'N': ['AAU','AAC'],
    'P': ['CCU','CCC','CCA','CCG'],
    'Q': ['CAA','CAG'],
    'R': ['CGU','CGC','CGA','CGG','AGA','AGG'],
    'S': ['UCU','UCC','UCA','UCG','AGU','AGC'],
    'T': ['ACU','ACC','ACA','ACG'],
    'V': ['GUU','GUC','GUA','GUG'],
    'W': ['UGG'],
    'Y': ['UAU','UAC'],
    'STOP': ['UGA'],
}

# define given string 's'
givenStringS = 'AUGGCCAUGGCGCCCAGAACUGAGAUCAAUAGUACCCGUAUUAACGGGUGA'


# separate stringS into blocks of three characters, use inbuilt wrap function
aminoAcidCodenSeq = []
codonLength = 3
for aminoAcid in range(0, len(givenStringS), codonLength):
    aminoAcidCodenSeq.append(givenStringS[aminoAcid : aminoAcid + codonLength])


# loop through list of codons in stringS to find corresponding amino acid
for codon in aminoAcidCodenSeq:
    print(list(aminoAcidDICTIONARY.values())[list(aminoAcidDICTIONARY.keys()).index(codon)])
#ERROR: 
#Traceback (most recent call last):
#  File "/home/em/PycharmProjects/Rosalind/Bioinformatics Stronghold/Translating RNA into Protein.py", line 51, in <module>
#    print(list(aminoAcidDICTIONARY.values())[list(aminoAcidDICTIONARY.keys()).index(codon)])
#ValueError: 'AUG' is not in list
